# This is a basic workflow to help you get started with Actions

name: Package Adobe Acrobat Reader DC

# Controls when the action will run. 
on:  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # Change back to Ubuntu once we fix the script
    #runs-on: ubuntu-latest
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Run PowerShell commands
      - name: Download IntuneAppUtil
        shell: pwsh
        run: |
            Write-Host "`n== IntuneAppUtil" -ForegroundColor "Cyan"
            New-Item -Path "~/intune" -ItemType "Directory" -ErrorAction "SilentlyContinue"
            $Path = Resolve-Path -Path "~/intune"
            $uri = "https://raw.githubusercontent.com/msintuneappsdk/intune-app-wrapping-tool-mac/v1.2/IntuneAppUtil"
            $binary = Join-Path -Path $Path -ChildPath (Split-Path -Path $uri -Leaf)
            try {
                Invoke-WebRequest -Uri $uri -OutFile $binary -UseBasicParsing
            }
            catch {
                Write-Warning "Failed to download: $uri."
                throw $_
            }
            if (Test-Path -Path $binary) {
                try {
                    chmod +x $binary
                }
                catch {
                    Write-Warning "Failed to set execute permission on: $binary."
                    throw $_
                }
            }

      - name: Generate Package
        shell: pwsh
        run: |
            $app = "Adobe Acrobat Reader DC"
            $Path = Resolve-Path -Path "~/intune"
            Write-Host "`n== $app" -ForegroundColor "Cyan"
            $update = "https://armmf.adobe.com/arm-manifests/mac/AcrobatDC/reader/current_version.txt"
            try {
                $version = Invoke-RestMethod -Uri $update
            }
            catch {
                Write-Warning "Failed to query: $update."
                throw $_
            }

            # Download Acrobat Reader
            try {
                $verstring = $version -replace "\.", ""
                $uri = "https://ardownload2.adobe.com/pub/adobe/reader/mac/AcrobatDC/$verstring/AcroRdrDC_$($verstring)_MUI.dmg"
                $output = Join-Path -Path $Path -ChildPath (Split-Path $uri -Leaf)
                Write-Host "$($app): $uri" -ForegroundColor "Cyan"
                Write-Host "$($app): $version" -ForegroundColor "Cyan"
                Write-Host "$($app): $output" -ForegroundColor "Cyan"
                Invoke-WebRequest -Uri $uri -OutFile $output -UseBasicParsing
            }
            catch {
                Write-Warning "Failed to grab Pkg."
                throw $_
            }

            # Mount the Dmg 
            try {
                if (Test-Path -Path $output) {
                    $RegEx = "\/Volumes.*"
                    $mount = hdiutil attach $output
                    $VolPath = [RegEx]::Match($mount, $RegEx).Captures.Groups[0].Value

                    # Copy the Workspace app installer to the scratch directory, removing spaces from the file name
                    $Package = Get-ChildItem -Path $VolPath -Filter "AcroRdr*.pkg" | Select-Object -First 1
                    $NewPackage = Join-Path -Path $Path -ChildPath "package"
                    New-Item -Path $NewPackage -ItemType "Directory" -ErrorAction "SilentlyContinue"
                    Copy-Item -Path $Package.FullName -Destination $NewPackage
                    $Package = Get-ChildItem -Path $NewPackage -Filter "AcroRdr*.pkg"
                }
            }
            catch {
                Write-Warning "Failed extract Pkg from Dmg."
                throw $_
            }

            # Unmount the Dmg
            hdiutil detach $VolPath

            # Convert the Pkg to IntuneMac format
            if (Test-Path -Path $NewPackage) {
                
                New-Item -Path $NewPackage -ItemType "Directory" -ErrorAction "SilentlyContinue"
                Write-Host "Execute: ~/intune/IntuneAppUtil -c $Package -o $Path -v -n $version" -ForegroundColor "Cyan"
                ~/intune/IntuneAppUtil -c $Package -o $Path -v -n $version
            }

      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: acrobatreader-pkg
          path: ~/intune/AcroRdrDC_2200120142_MUI.pkg.intunemac
